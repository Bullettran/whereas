@use "sass:math";

.dynamic-title {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;

    div {
        transform-style: preserve-3d;
    }

    .dynamic-title__text {
        position: absolute;
        font-size: 16rem;
        color: #fff;
        line-height: 18rem;
        opacity: 0;
        font-family: "Germania One", serif;
        transform: translate(-50%, -50%);
        mix-blend-mode: screen;

        @for $i from 0 through 100 {
            $key: $i + 1;

            &:nth-child(#{$key}) {
                $row: math.floor(math.div($i, 20));

                background: linear-gradient(to bottom, #B87333 40%, #9C661F 60%, #855E42);

                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                color: #B87333;
                -webkit-text-stroke: 2px #000;

                clip-path: polygon(
                                (math.floor(math.div($i, 2)) * 10%) - ($row * 100%)  ($row * 50%),
                                (math.floor(math.div($key, 2)) * 10%) - ($row * 100%) (math.ceil($key % 2) * 50% + ($row * 50%)),
                                (math.ceil(math.div($key, 2)) * 10%) - ($row * 100%) (($row + 1) * 50%)
                );

                transform-origin: (math.random(100) - 50) + ((math.floor(math.div($i, 2)) * 10%) - ($row * 100%)) (math.random(100) - 50) + ($row * 50%);

                animation: fly#{$key} 5000ms #{$i * 40}ms cubic-bezier(0.360, 0.100, 0.160, 1.000) forwards;

                @keyframes fly#{$key} {
                    $initX: math.random(1000) - 500;
                    $initY: math.random(1000) - 500;
                    $initZ: math.random(1000) - 500;
                    $initDepth: math.random(3000) - 2500;

                    0% {
                        opacity: 0;
                        transform: translate(-50%, -50%) rotateX(#{$initX}deg) rotateY(#{$initY}deg) rotateZ(#{$initZ}deg) translateZ(#{$initDepth}px);
                    }
                    10% {
                        opacity: 0;
                        transform: translate(-50%, -50%) rotateX(#{$initX}deg) rotateY(#{$initY}deg) rotateZ(#{$initZ}deg) translateZ(#{$initDepth}px);
                    }
                    90% {
                        opacity: 1;
                        transform: translate(-50%, -50%) rotate(0deg) rotateY(0deg) rotateZ(0deg) translateZ(0);
                    }
                    100% {
                        opacity: 1;
                        transform: translate(-50%, -50%) rotate(0deg) rotateY(0deg) rotateZ(0deg) translateZ(0);
                    }
                }
            }
        }
    }
}